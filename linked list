#include<stdio.h>
#include<stdlib.h>
struct node{
int data;
struct node *link;
};

void count_of_nodes(struct node *head){
int count=0;
if(head==0){
printf("linked list is empty");
}
struct node *ptr=NULL;
ptr=head;
while(ptr!=NULL) {
count++;
ptr=ptr->link;
}
printf("count=%d\n",count);
}

void print_data(struct node *head){
struct node *ptr=NULL;
ptr=head;
while(ptr!=NULL){
printf("data=%d\n",ptr->data);
ptr=ptr->link;
}
}


void add_beg(struct node **head,int d){
struct node *temp=NULL;
temp=malloc(sizeof(struct node));
temp->data=d;
temp->link=NULL;

temp->link=*head;
*head=temp;
}


void add_end(struct node *head,int d){
struct node *temp=malloc(sizeof(struct node));
temp->data=d;
temp->link=NULL;
struct node *ptr=head;
while(ptr->link!=NULL){
ptr=ptr->link;
}
ptr->link=temp;
printf("data after adding at end\n");
}



int main(){
struct node *head=NULL;
head=malloc(sizeof(struct node));
head->data=45;
head->link=NULL;

struct node *current=NULL;
current=malloc(sizeof(struct node));
current->data=50;
current->link=NULL;
head->link=current;

current=malloc(sizeof(struct node));
current->data=55;
current->link=NULL;
head->link->link=current;

count_of_nodes(head);
print_data(head);
printf("data after adding at begining\n");
add_beg(&head,65);
print_data(head);
add_end(head,75);
print_data(head);
return 0;
}

